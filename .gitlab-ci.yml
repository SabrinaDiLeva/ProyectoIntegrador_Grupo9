stages:
  - build
  - test
  - deploy


build-backend:
  stage: build
  image: maven:3.8.6-openjdk-18-slim
  script:
    - cd ./Backend
    - echo "Compiling the code..."
    - mvn clean install 
    - mvn compile jar:jar
    - mvn package

  artifacts:
    paths:
      - Backend/target/PIGrupo9.jar

  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
      changes:
        - Backend/**/*


frontend_build_job:
  stage: build
  image: node:latest
  script:
    - cd ./Frontend/proyecto-integrador
    - echo "Start building App"
    - npm install
    - CI=false npm run build
    - echo "Build successfully!"
  artifacts:
    paths:
      - Frontend/proyecto-integrador/build/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
      changes:
        - Frontend/**/*

test-backend:
  stage: test
  script:
    - echo "Running unit tests..."
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
      changes:
        - Backend/**/*

deploy-backend:
  stage: deploy
  image: alpine:3.11
  before_script:
    - apk update && apk add openssh-client bash
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
    
  script:
    - ssh ubuntu@$DEPLOY_SERVER_IP "sudo apt install openjdk-18-jdk -y"
    # - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop tomcat"
    - scp ./Backend/target/PIGrupo9.jar ubuntu@$DEPLOY_SERVER_IP:/home/ubuntu/tmp/PIGrupo9.jar
    # - ssh ubuntu@$DEPLOY_SERVER_IP "sudo mv /home/ubuntu/tmp/PIGrupo9.war /opt/tomcat/webapps/PIGrupo9.war"
    - ssh ubuntu@$DEPLOY_SERVER_IP "cd /home/ubuntu/tmp/; sudo nohup java -jar PIGrupo9.jar &."
    # - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start tomcat"

  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
      changes:
        - Backend/**/*

frontend_deploy_job:
  stage: deploy
  image: python:latest
  script:
      - echo "Deploying App"
      - pip3 install awscli
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws s3 sync ./Frontend/proyecto-integrador/build s3://$S3_BUCKET_NAME --delete
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
      changes:
        - Frontend/**/*